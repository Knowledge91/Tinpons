//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to
// copy, distribute and modify it.
//

'use strict';
var AWS = require("aws-sdk");
var docClient = new AWS.DynamoDB.DocumentClient();
var table = "tinpons-mobilehub-1827971537-Users";


console.log("Loading function");

exports.handler = function(event, context, callback) {
    var responseCode = 200;
    var requestBody, pathParams, queryStringParams, headerParams, stage,
    stageVariables, cognitoIdentityId, httpMethod, sourceIp, userAgent,
    requestId, resourcePath;
    console.log("request: " + JSON.stringify(event));

    // Request Body
    requestBody = event.body;

    if (requestBody !== undefined && requestBody !== null) {

        // Set 'test-status' field in the request to test sending a specific response status code (e.g., 503)
        responseCode = JSON.parse(requestBody)['test-status'];
    }

    // Path Parameters
    pathParams = event.path;

    // Query String Parameters
    queryStringParams = event.queryStringParameters;

    // Header Parameters
    headerParams = event.headers;

    if (event.requestContext !== null && event.requestContext !== undefined) {

        var requestContext = event.requestContext;

        // API Gateway Stage
        stage = requestContext.stage;

        // Unique Request ID
        requestId = requestContext.requestId;

        // Resource Path
        resourcePath = requestContext.resourcePath;

        var identity = requestContext.identity;

        // Amazon Cognito User Identity
        cognitoIdentityId = identity.cognitoIdentityId;

        // Source IP
        sourceIp = identity.sourceIp;

        // User-Agent
        userAgent = identity.userAgent;
    }

    // API Gateway Stage Variables
    stageVariables = event.stageVariables;

    // HTTP Method (e.g., POST, GET, HEAD)
    httpMethod = event.httpMethod;

    // TODO: Put your application logic here...


    var result;
    switch (httpMethod) {
      case "GET":
        //var userId = "eu-west-1:ed3670fa-1f3d-40b8-a181-cb48b78fff1c";
        var userId = cognitoIdentityId;
        var params = {
            TableName: table,
            Key:{
                "userId": userId,
            }
        };

        docClient.get(params, function(err, data) {
            if (err) {
                console.error("Unable to read item. Error JSON:", JSON.stringify(err, null, 2));
                result = "Unable to read item. Error JSON:"+JSON.stringify(err, null, 2);
            } else {
                console.log("GetItem succeeded:", JSON.stringify(data, null, 2));
                // Strip JOSN Item Root { "Item": ... }
                result = data.Item
            }

            var response = {
                statusCode: responseCode,
                headers: {
                    "x-custom-header" : "custom header value"
                },
                body: JSON.stringify(result)
            };

            context.succeed(response);
        });
        break;
      case "POST":
        let user = JSON.parse(requestBody);

        var params = {
            TableName:table,
            Item:{
                "userId" : user.userId,
                "createdAt" : user.createdAt,
                "birthdate" : user.birthdate,
                "gender" : user.gender,
                "height" : user.height,
                "tinponCategories" : docClient.createSet(user.tinponCategories),
                "updatedAt" : user.updatedAt
            }
        };

        docClient.put(params, function(err, data) {
            if (err) {
                console.error("Unable to add item. Error JSON:", JSON.stringify(err, null, 2));
                result = "Unable to add item. Error JSON:", JSON.stringify(err, null, 2);
                response = {
                  statusCode: responseCode,
                  headers: {
                      "x-custom-header" : "custom header value"
                  },
                  body: result
                };
                context.succeed(response);
            } else {
                console.log("Added item:", JSON.stringify(data, null, 2));
                result = "Added item:", JSON.stringify(data, null, 2);
                response = {
                  statusCode: responseCode,
                  headers: {
                      "x-custom-header" : "custom header value"
                  },
                  body: result
                };
                context.succeed(response);
            }
        });
        break;
      default:
        // // For demonstration purposes, we'll just echo these values back to the client
        // var responseBody = {
        //     requestBody : requestBody,
        //     pathParams : pathParams,
        //     queryStringParams : queryStringParams,
        //     headerParams : headerParams,
        //     stage : stage,
        //     stageVariables : stageVariables,
        //     cognitoIdentityId : cognitoIdentityId,
        //     httpMethod : httpMethod,
        //     sourceIp : sourceIp,
        //     userAgent : userAgent,
        //     requestId : requestId,
        //     resourcePath : resourcePath
        // };
        //
        // response = {
        //   statusCode: responseCode,
        //   headers: {
        //       "x-custom-header" : "custom header value"
        //   },
        //   body: JSON.stringify(responseBody)
        // };
        // context.succeed(response);
        var response = {
            statusCode: responseCode,
            headers: {
                "x-custom-header" : "custom header value"
            },
            body: httpMethod+" is not an allowed HTTP method."
        };

        context.succeed(response);
    }





    // For demonstration purposes, we'll just echo these values back to the client
    // var responseBody = {
    //     requestBody : requestBody,
    //     pathParams : pathParams,
    //     queryStringParams : queryStringParams,
    //     headerParams : headerParams,
    //     stage : stage,
    //     stageVariables : stageVariables,
    //     cognitoIdentityId : cognitoIdentityId,
    //     httpMethod : httpMethod,
    //     sourceIp : sourceIp,
    //     userAgent : userAgent,
    //     requestId : requestId,
    //     resourcePath : resourcePath
    // };
    //


    // testing
};
